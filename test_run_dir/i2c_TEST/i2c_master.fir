;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit i2c_master : 
  module i2c_master : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip start : UInt<1>, flip addr : UInt<7>, flip data : UInt<8>, flip read_write : UInt<1>, flip ack : UInt<1>, flip data_ack : UInt<1>, i2c_sda : UInt<1>, i2c_scl : UInt<1>, ready : UInt<1>, stop : UInt<1>}
    
    reg state : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[i2c_master.scala 25:24]
    reg count : UInt<15>, clock with : (reset => (reset, UInt<15>("h00"))) @[i2c_master.scala 26:24]
    reg saved_addr : UInt<7>, clock with : (reset => (reset, UInt<7>("h00"))) @[i2c_master.scala 27:29]
    reg saved_data : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[i2c_master.scala 28:29]
    reg i2c_scl_enable : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[i2c_master.scala 29:33]
    wire WACK1 : UInt
    WACK1 <= UInt<1>("h00")
    wire WACK2 : UInt
    WACK2 <= UInt<1>("h00")
    reg WACK11 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[i2c_master.scala 34:25]
    reg WACK22 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[i2c_master.scala 35:25]
    state <= UInt<3>("h00") @[i2c_master.scala 39:11]
    io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 41:16]
    io.ready <= UInt<1>("h00") @[i2c_master.scala 42:14]
    io.stop <= UInt<1>("h00") @[i2c_master.scala 43:13]
    node _clk_T = asUInt(clock) @[i2c_master.scala 45:36]
    node _clk_T_1 = bits(_clk_T, 0, 0) @[i2c_master.scala 45:38]
    wire clk : UInt<1>
    clk <= _clk_T_1
    node _rst_T = bits(reset, 0, 0) @[i2c_master.scala 46:38]
    wire rst : UInt<1>
    rst <= _rst_T
    node _io_i2c_scl_T = eq(i2c_scl_enable, UInt<1>("h00")) @[i2c_master.scala 48:38]
    node _io_i2c_scl_T_1 = not(clk) @[i2c_master.scala 48:54]
    node _io_i2c_scl_T_2 = mux(_io_i2c_scl_T, UInt<1>("h01"), _io_i2c_scl_T_1) @[i2c_master.scala 48:22]
    io.i2c_scl <= _io_i2c_scl_T_2 @[i2c_master.scala 48:16]
    node _T = eq(rst, UInt<1>("h01")) @[i2c_master.scala 50:14]
    when _T : @[i2c_master.scala 50:22]
      i2c_scl_enable <= UInt<1>("h00") @[i2c_master.scala 51:24]
      skip @[i2c_master.scala 50:22]
    else : @[i2c_master.scala 52:16]
      node _T_1 = eq(state, UInt<3>("h00")) @[i2c_master.scala 53:22]
      node _T_2 = eq(state, UInt<3>("h01")) @[i2c_master.scala 53:46]
      node _T_3 = or(_T_1, _T_2) @[i2c_master.scala 53:37]
      node _T_4 = eq(state, UInt<3>("h06")) @[i2c_master.scala 53:71]
      node _T_5 = or(_T_3, _T_4) @[i2c_master.scala 53:62]
      when _T_5 : @[i2c_master.scala 53:87]
        i2c_scl_enable <= UInt<1>("h00") @[i2c_master.scala 54:28]
        skip @[i2c_master.scala 53:87]
      else : @[i2c_master.scala 55:20]
        i2c_scl_enable <= UInt<1>("h01") @[i2c_master.scala 56:29]
        skip @[i2c_master.scala 55:20]
      skip @[i2c_master.scala 52:16]
    node _T_6 = eq(rst, UInt<1>("h01")) @[i2c_master.scala 60:14]
    when _T_6 : @[i2c_master.scala 60:22]
      state <= UInt<3>("h00") @[i2c_master.scala 61:15]
      io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 62:20]
      skip @[i2c_master.scala 60:22]
    else : @[i2c_master.scala 63:16]
      node _T_7 = eq(UInt<3>("h00"), state) @[Conditional.scala 37:30]
      when _T_7 : @[Conditional.scala 40:58]
        io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 66:28]
        node _T_8 = eq(io.start, UInt<1>("h01")) @[i2c_master.scala 67:31]
        when _T_8 : @[i2c_master.scala 67:39]
          state <= UInt<3>("h01") @[i2c_master.scala 68:27]
          io.ready <= UInt<1>("h00") @[i2c_master.scala 69:30]
          io.stop <= UInt<1>("h00") @[i2c_master.scala 70:29]
          skip @[i2c_master.scala 67:39]
        else : @[i2c_master.scala 71:28]
          state <= UInt<3>("h00") @[i2c_master.scala 72:27]
          skip @[i2c_master.scala 71:28]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_9 = eq(UInt<3>("h01"), state) @[Conditional.scala 37:30]
        when _T_9 : @[Conditional.scala 39:67]
          io.i2c_sda <= UInt<1>("h00") @[i2c_master.scala 78:28]
          saved_addr <= io.addr @[i2c_master.scala 79:28]
          saved_data <= io.data @[i2c_master.scala 80:28]
          io.ready <= UInt<1>("h01") @[i2c_master.scala 81:26]
          io.stop <= UInt<1>("h00") @[i2c_master.scala 82:25]
          state <= UInt<3>("h02") @[i2c_master.scala 83:23]
          count <= UInt<3>("h06") @[i2c_master.scala 84:23]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_10 = eq(UInt<3>("h02"), state) @[Conditional.scala 37:30]
          when _T_10 : @[Conditional.scala 39:67]
            node _io_i2c_sda_T = dshr(saved_addr, count) @[i2c_master.scala 88:41]
            node _io_i2c_sda_T_1 = bits(_io_i2c_sda_T, 0, 0) @[i2c_master.scala 88:41]
            io.i2c_sda <= _io_i2c_sda_T_1 @[i2c_master.scala 88:28]
            io.ready <= UInt<1>("h00") @[i2c_master.scala 89:26]
            io.stop <= UInt<1>("h00") @[i2c_master.scala 90:25]
            node _T_11 = eq(count, UInt<1>("h00")) @[i2c_master.scala 91:28]
            when _T_11 : @[i2c_master.scala 91:36]
              state <= UInt<3>("h03") @[i2c_master.scala 92:27]
              skip @[i2c_master.scala 91:36]
            else : @[i2c_master.scala 93:28]
              node _count_T = sub(count, UInt<1>("h01")) @[i2c_master.scala 94:36]
              node _count_T_1 = tail(_count_T, 1) @[i2c_master.scala 94:36]
              count <= _count_T_1 @[i2c_master.scala 94:27]
              state <= UInt<3>("h02") @[i2c_master.scala 95:27]
              skip @[i2c_master.scala 93:28]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<3>("h03"), state) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              node _T_13 = eq(io.read_write, UInt<1>("h00")) @[i2c_master.scala 101:36]
              when _T_13 : @[i2c_master.scala 101:44]
                io.i2c_sda <= UInt<1>("h00") @[i2c_master.scala 102:32]
                io.ready <= UInt<1>("h00") @[i2c_master.scala 103:30]
                io.stop <= UInt<1>("h00") @[i2c_master.scala 104:29]
                state <= UInt<3>("h04") @[i2c_master.scala 105:27]
                count <= UInt<4>("h08") @[i2c_master.scala 106:27]
                skip @[i2c_master.scala 101:44]
              else : @[i2c_master.scala 107:28]
                io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 108:32]
                io.ready <= UInt<1>("h00") @[i2c_master.scala 109:30]
                io.stop <= UInt<1>("h00") @[i2c_master.scala 110:29]
                state <= UInt<3>("h04") @[i2c_master.scala 111:27]
                count <= UInt<3>("h07") @[i2c_master.scala 112:27]
                skip @[i2c_master.scala 107:28]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_14 = eq(UInt<3>("h04"), state) @[Conditional.scala 37:30]
              when _T_14 : @[Conditional.scala 39:67]
                io.i2c_sda <= io.ack @[i2c_master.scala 118:28]
                node _io_i2c_sda_T_2 = dshr(saved_data, count) @[i2c_master.scala 119:41]
                node _io_i2c_sda_T_3 = bits(_io_i2c_sda_T_2, 0, 0) @[i2c_master.scala 119:41]
                io.i2c_sda <= _io_i2c_sda_T_3 @[i2c_master.scala 119:28]
                io.ready <= UInt<1>("h00") @[i2c_master.scala 120:26]
                io.stop <= UInt<1>("h00") @[i2c_master.scala 121:25]
                node _T_15 = eq(count, UInt<1>("h00")) @[i2c_master.scala 122:28]
                when _T_15 : @[i2c_master.scala 122:36]
                  state <= UInt<3>("h05") @[i2c_master.scala 123:27]
                  skip @[i2c_master.scala 122:36]
                else : @[i2c_master.scala 124:28]
                  node _count_T_2 = sub(count, UInt<1>("h01")) @[i2c_master.scala 125:36]
                  node _count_T_3 = tail(_count_T_2, 1) @[i2c_master.scala 125:36]
                  count <= _count_T_3 @[i2c_master.scala 125:27]
                  state <= UInt<3>("h04") @[i2c_master.scala 126:27]
                  skip @[i2c_master.scala 124:28]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_16 = eq(UInt<3>("h05"), state) @[Conditional.scala 37:30]
                when _T_16 : @[Conditional.scala 39:67]
                  io.i2c_sda <= io.data_ack @[i2c_master.scala 132:28]
                  io.ready <= UInt<1>("h00") @[i2c_master.scala 133:26]
                  io.stop <= UInt<1>("h00") @[i2c_master.scala 134:25]
                  state <= UInt<3>("h06") @[i2c_master.scala 135:23]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_17 = eq(UInt<3>("h06"), state) @[Conditional.scala 37:30]
                  when _T_17 : @[Conditional.scala 39:67]
                    io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 139:28]
                    io.ready <= UInt<1>("h00") @[i2c_master.scala 140:26]
                    io.stop <= UInt<1>("h00") @[i2c_master.scala 141:25]
                    state <= UInt<3>("h00") @[i2c_master.scala 142:23]
                    skip @[Conditional.scala 39:67]
      skip @[i2c_master.scala 63:16]
    
