;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit i2c_master : 
  module i2c_master : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip start : UInt<1>, flip addr : UInt<7>, flip data : UInt<8>, flip read_write : UInt<1>, flip i2c_sda_in : UInt<1>, i2c_sda : UInt<1>, i2c_scl : UInt<1>, ready : UInt<1>, stop : UInt<1>, i2c_intr : UInt<1>}
    
    reg state : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[i2c_master.scala 24:24]
    reg count : UInt<15>, clock with : (reset => (reset, UInt<15>("h00"))) @[i2c_master.scala 25:24]
    reg saved_addr : UInt<7>, clock with : (reset => (reset, UInt<7>("h00"))) @[i2c_master.scala 26:29]
    reg saved_data : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[i2c_master.scala 27:29]
    reg i2c_scl_enable : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[i2c_master.scala 28:33]
    reg intr_done : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[i2c_master.scala 29:28]
    state <= UInt<3>("h00") @[i2c_master.scala 31:11]
    io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 33:16]
    io.ready <= UInt<1>("h00") @[i2c_master.scala 34:14]
    io.stop <= UInt<1>("h00") @[i2c_master.scala 35:13]
    node _clk_T = asUInt(clock) @[i2c_master.scala 37:36]
    node _clk_T_1 = bits(_clk_T, 0, 0) @[i2c_master.scala 37:38]
    wire clk : UInt<1>
    clk <= _clk_T_1
    node _rst_T = bits(reset, 0, 0) @[i2c_master.scala 38:38]
    wire rst : UInt<1>
    rst <= _rst_T
    node _io_i2c_scl_T = eq(i2c_scl_enable, UInt<1>("h00")) @[i2c_master.scala 40:38]
    node _io_i2c_scl_T_1 = not(clk) @[i2c_master.scala 40:54]
    node _io_i2c_scl_T_2 = mux(_io_i2c_scl_T, UInt<1>("h01"), _io_i2c_scl_T_1) @[i2c_master.scala 40:22]
    io.i2c_scl <= _io_i2c_scl_T_2 @[i2c_master.scala 40:16]
    node _T = eq(rst, UInt<1>("h01")) @[i2c_master.scala 42:14]
    when _T : @[i2c_master.scala 42:22]
      i2c_scl_enable <= UInt<1>("h00") @[i2c_master.scala 43:24]
      skip @[i2c_master.scala 42:22]
    else : @[i2c_master.scala 44:16]
      node _T_1 = eq(state, UInt<3>("h00")) @[i2c_master.scala 45:22]
      node _T_2 = eq(state, UInt<3>("h01")) @[i2c_master.scala 45:46]
      node _T_3 = or(_T_1, _T_2) @[i2c_master.scala 45:37]
      node _T_4 = eq(state, UInt<3>("h07")) @[i2c_master.scala 45:71]
      node _T_5 = or(_T_3, _T_4) @[i2c_master.scala 45:62]
      when _T_5 : @[i2c_master.scala 45:87]
        i2c_scl_enable <= UInt<1>("h00") @[i2c_master.scala 46:28]
        skip @[i2c_master.scala 45:87]
      else : @[i2c_master.scala 47:20]
        i2c_scl_enable <= UInt<1>("h01") @[i2c_master.scala 48:29]
        skip @[i2c_master.scala 47:20]
      skip @[i2c_master.scala 44:16]
    node _T_6 = eq(rst, UInt<1>("h01")) @[i2c_master.scala 52:14]
    when _T_6 : @[i2c_master.scala 52:22]
      state <= UInt<3>("h00") @[i2c_master.scala 53:15]
      io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 54:20]
      skip @[i2c_master.scala 52:22]
    else : @[i2c_master.scala 55:16]
      node _T_7 = eq(UInt<3>("h00"), state) @[Conditional.scala 37:30]
      when _T_7 : @[Conditional.scala 40:58]
        io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 58:28]
        intr_done <= UInt<1>("h00") @[i2c_master.scala 59:27]
        node _T_8 = eq(io.start, UInt<1>("h01")) @[i2c_master.scala 60:31]
        when _T_8 : @[i2c_master.scala 60:39]
          state <= UInt<3>("h01") @[i2c_master.scala 61:27]
          io.ready <= UInt<1>("h00") @[i2c_master.scala 62:30]
          io.stop <= UInt<1>("h00") @[i2c_master.scala 63:29]
          skip @[i2c_master.scala 60:39]
        else : @[i2c_master.scala 64:28]
          state <= UInt<3>("h00") @[i2c_master.scala 65:27]
          skip @[i2c_master.scala 64:28]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_9 = eq(UInt<3>("h01"), state) @[Conditional.scala 37:30]
        when _T_9 : @[Conditional.scala 39:67]
          io.i2c_sda <= UInt<1>("h00") @[i2c_master.scala 71:28]
          saved_addr <= io.addr @[i2c_master.scala 72:28]
          saved_data <= io.data @[i2c_master.scala 73:28]
          io.ready <= UInt<1>("h01") @[i2c_master.scala 74:26]
          io.stop <= UInt<1>("h00") @[i2c_master.scala 75:25]
          state <= UInt<3>("h02") @[i2c_master.scala 76:23]
          count <= UInt<3>("h06") @[i2c_master.scala 77:23]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_10 = eq(UInt<3>("h02"), state) @[Conditional.scala 37:30]
          when _T_10 : @[Conditional.scala 39:67]
            node _io_i2c_sda_T = dshr(saved_addr, count) @[i2c_master.scala 81:41]
            node _io_i2c_sda_T_1 = bits(_io_i2c_sda_T, 0, 0) @[i2c_master.scala 81:41]
            io.i2c_sda <= _io_i2c_sda_T_1 @[i2c_master.scala 81:28]
            io.ready <= UInt<1>("h00") @[i2c_master.scala 82:26]
            io.stop <= UInt<1>("h00") @[i2c_master.scala 83:25]
            node _T_11 = eq(count, UInt<1>("h00")) @[i2c_master.scala 84:28]
            when _T_11 : @[i2c_master.scala 84:36]
              state <= UInt<3>("h03") @[i2c_master.scala 85:27]
              skip @[i2c_master.scala 84:36]
            else : @[i2c_master.scala 86:28]
              node _count_T = sub(count, UInt<1>("h01")) @[i2c_master.scala 87:36]
              node _count_T_1 = tail(_count_T, 1) @[i2c_master.scala 87:36]
              count <= _count_T_1 @[i2c_master.scala 87:27]
              state <= UInt<3>("h02") @[i2c_master.scala 88:27]
              skip @[i2c_master.scala 86:28]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_12 = eq(UInt<3>("h03"), state) @[Conditional.scala 37:30]
            when _T_12 : @[Conditional.scala 39:67]
              io.i2c_sda <= io.read_write @[i2c_master.scala 94:28]
              io.ready <= UInt<1>("h00") @[i2c_master.scala 95:26]
              io.stop <= UInt<1>("h00") @[i2c_master.scala 96:25]
              state <= UInt<3>("h04") @[i2c_master.scala 97:23]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_13 = eq(UInt<3>("h04"), state) @[Conditional.scala 37:30]
              when _T_13 : @[Conditional.scala 39:67]
                io.i2c_sda <= io.i2c_sda_in @[i2c_master.scala 103:32]
                node _T_14 = eq(io.i2c_sda_in, UInt<1>("h00")) @[i2c_master.scala 104:40]
                when _T_14 : @[i2c_master.scala 104:48]
                  state <= UInt<3>("h05") @[i2c_master.scala 105:31]
                  count <= UInt<3>("h07") @[i2c_master.scala 106:31]
                  io.ready <= UInt<1>("h00") @[i2c_master.scala 107:34]
                  io.stop <= UInt<1>("h00") @[i2c_master.scala 108:33]
                  skip @[i2c_master.scala 104:48]
                else : @[i2c_master.scala 109:32]
                  state <= UInt<3>("h07") @[i2c_master.scala 110:31]
                  io.ready <= UInt<1>("h00") @[i2c_master.scala 111:34]
                  io.stop <= UInt<1>("h00") @[i2c_master.scala 112:33]
                  skip @[i2c_master.scala 109:32]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_15 = eq(UInt<3>("h05"), state) @[Conditional.scala 37:30]
                when _T_15 : @[Conditional.scala 39:67]
                  node _io_i2c_sda_T_2 = dshr(io.data, count) @[i2c_master.scala 119:38]
                  node _io_i2c_sda_T_3 = bits(_io_i2c_sda_T_2, 0, 0) @[i2c_master.scala 119:38]
                  io.i2c_sda <= _io_i2c_sda_T_3 @[i2c_master.scala 119:28]
                  io.ready <= UInt<1>("h00") @[i2c_master.scala 120:26]
                  io.stop <= UInt<1>("h00") @[i2c_master.scala 121:25]
                  node _T_16 = eq(count, UInt<1>("h00")) @[i2c_master.scala 122:28]
                  when _T_16 : @[i2c_master.scala 122:36]
                    state <= UInt<3>("h06") @[i2c_master.scala 123:27]
                    skip @[i2c_master.scala 122:36]
                  else : @[i2c_master.scala 124:28]
                    node _count_T_2 = sub(count, UInt<1>("h01")) @[i2c_master.scala 125:36]
                    node _count_T_3 = tail(_count_T_2, 1) @[i2c_master.scala 125:36]
                    count <= _count_T_3 @[i2c_master.scala 125:27]
                    state <= UInt<3>("h05") @[i2c_master.scala 126:27]
                    skip @[i2c_master.scala 124:28]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_17 = eq(UInt<3>("h06"), state) @[Conditional.scala 37:30]
                  when _T_17 : @[Conditional.scala 39:67]
                    io.i2c_sda <= io.i2c_sda_in @[i2c_master.scala 132:28]
                    io.ready <= UInt<1>("h00") @[i2c_master.scala 133:26]
                    io.stop <= UInt<1>("h00") @[i2c_master.scala 134:25]
                    state <= UInt<3>("h07") @[i2c_master.scala 135:23]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_18 = eq(UInt<3>("h07"), state) @[Conditional.scala 37:30]
                    when _T_18 : @[Conditional.scala 39:67]
                      io.i2c_sda <= UInt<1>("h01") @[i2c_master.scala 139:28]
                      intr_done <= UInt<1>("h01") @[i2c_master.scala 140:27]
                      io.ready <= UInt<1>("h00") @[i2c_master.scala 141:26]
                      io.stop <= UInt<1>("h01") @[i2c_master.scala 142:25]
                      state <= UInt<3>("h00") @[i2c_master.scala 143:23]
                      skip @[Conditional.scala 39:67]
      skip @[i2c_master.scala 55:16]
    io.i2c_intr <= intr_done @[i2c_master.scala 148:17]
    
